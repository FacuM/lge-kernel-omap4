From 0a886c0675324d437c6762e63ba6ac11ed34f471 Mon Sep 17 00:00:00 2001
From: Dorimanx <yuri@bynet.co.il>
Date: Mon, 19 Aug 2013 11:16:48 +0300
Subject: [PATCH 071/100] EXFAT some ports and corrections to fix small bugs

Signed-off-by: artas182x <artas182x@gmail.com>
---
 fs/exfat/exfat_cache.c   |  3 +--
 fs/exfat/exfat_core.c    | 14 ++++++--------
 fs/exfat/exfat_data.c    |  2 ++
 fs/exfat/exfat_nls.h     | 50 ++++++++++++++++++++++++------------------------
 fs/exfat/exfat_super.c   |  8 ++++----
 fs/exfat/exfat_super.h   |  1 +
 fs/exfat/exfat_version.h |  2 +-
 7 files changed, 40 insertions(+), 40 deletions(-)

diff --git a/fs/exfat/exfat_cache.c b/fs/exfat/exfat_cache.c
index 460d749..05c6136 100644
--- a/fs/exfat/exfat_cache.c
+++ b/fs/exfat/exfat_cache.c
@@ -216,8 +216,7 @@ static INT32 __FAT_read(struct super_block *sb, UINT32 loc, UINT32 *content)
 		off = (loc << 1) & p_bd->sector_size_mask;
 
 		fat_sector = FAT_getblk(sb, sec);
-		if
-		(!fat_sector)
+		if (!fat_sector)
 			return -1;
 
 		fat_entry = &(fat_sector[off]);
diff --git a/fs/exfat/exfat_core.c b/fs/exfat/exfat_core.c
index 94aa7a3..3ee43c2 100644
--- a/fs/exfat/exfat_core.c
+++ b/fs/exfat/exfat_core.c
@@ -202,7 +202,7 @@ INT32 ffsMountVol(struct super_block *sb, INT32 drv)
 	FS_INFO_T *p_fs = &(EXFAT_SB(sb)->fs_info);
 	BD_INFO_T *p_bd = &(EXFAT_SB(sb)->bd_info);
 
-	PRINTK("[EXFAT] ===== ffsMountVol =====\n");
+	PRINTK("[EXFAT] trying to mount...\n");
 
 	p_fs->drv = drv;
 	p_fs->dev_ejected = FALSE;
@@ -308,8 +308,7 @@ INT32 ffsMountVol(struct super_block *sb, INT32 drv)
 		return FFS_MEDIAERR;
 	}
 
-	printk("[EXFAT] mounted successfully\n");
-
+	PRINTK("[EXFAT] mounted successfully\n");
 	return FFS_SUCCESS;
 } /* end of ffsMountVol */
 
@@ -318,7 +317,7 @@ INT32 ffsUmountVol(struct super_block *sb)
 {
 	FS_INFO_T *p_fs = &(EXFAT_SB(sb)->fs_info);
 
-	printk("[EXFAT] trying to unmount...\n");
+	PRINTK("[EXFAT] trying to unmount...\n");
 
 	fs_sync(sb, 0);
 	fs_set_vol_flags(sb, VOL_CLEAN);
@@ -335,13 +334,12 @@ INT32 ffsUmountVol(struct super_block *sb)
 	bdev_close(sb);
 
 	if (p_fs->dev_ejected) {
-		printk( "[EXFAT] unmounted with media errors. "
+		PRINTK( "[EXFAT] unmounted with media errors. "
 			"device's already ejected.\n");
 		return FFS_MEDIAERR;
 	}
 
-	printk("[EXFAT] unmounted successfully\n");
-
+	PRINTK("[EXFAT] unmounted successfully\n");
 	return FFS_SUCCESS;
 } /* end of ffsUmountVol */
 
@@ -3537,7 +3535,7 @@ INT32 write_partial_entries_in_entry_set (struct super_block *sb, ENTRY_SET_CACH
 	dir.size = 0xffffffff;		/* XXX */
 
 	byte_offset = (es->sector - START_SECTOR(dir.dir)) << p_bd->sector_size_bits;
-	byte_offset += ((INT32)ep - (INT32)&(es->__buf)) + es->offset;
+	byte_offset += ((INT32 *)ep - (INT32 *)&(es->__buf)) + es->offset;
 
 	ret =_walk_fat_chain(sb, &dir, byte_offset, &clu);
 	if (ret != FFS_SUCCESS)
diff --git a/fs/exfat/exfat_data.c b/fs/exfat/exfat_data.c
index f64e645..37e1932 100644
--- a/fs/exfat/exfat_data.c
+++ b/fs/exfat/exfat_data.c
@@ -56,6 +56,7 @@
 /* file system volume table */
 FS_STRUCT_T fs_struct[MAX_DRIVE];
 
+#if 0
 /*----------------------------------------------------------------------*/
 /*  Buffer Manager                                                      */
 /*----------------------------------------------------------------------*/
@@ -71,5 +72,6 @@ DECLARE_MUTEX(b_sem);
 BUF_CACHE_T buf_cache_array[BUF_CACHE_SIZE];
 BUF_CACHE_T buf_cache_lru_list;
 BUF_CACHE_T buf_cache_hash_list[BUF_CACHE_HASH_SIZE];
+#endif
 
 /* end of exfat_data.c */
diff --git a/fs/exfat/exfat_nls.h b/fs/exfat/exfat_nls.h
index 6ff3033..5b14cef 100644
--- a/fs/exfat/exfat_nls.h
+++ b/fs/exfat/exfat_nls.h
@@ -62,35 +62,35 @@ extern "C" {
 #define UNI_PAR_DIR_NAME        "\0.\0."
 #endif
 
-	/*----------------------------------------------------------------------*/
-	/*  Type Definitions                                                    */
-	/*----------------------------------------------------------------------*/
+/*----------------------------------------------------------------------*/
+/*  Type Definitions                                                    */
+/*----------------------------------------------------------------------*/
 
-	/* DOS name stucture */
-	typedef struct {
-		UINT8       name[DOS_NAME_LENGTH];
-		UINT8       name_case;
-	} DOS_NAME_T;
+/* DOS name stucture */
+typedef struct {
+	UINT8       name[DOS_NAME_LENGTH];
+	UINT8       name_case;
+} DOS_NAME_T;
 
-	/* unicode name stucture */
-	typedef struct {
-		UINT16      name[MAX_NAME_LENGTH];
-		UINT16      name_hash;
-		UINT8       name_len;
-	} UNI_NAME_T;
+/* unicode name stucture */
+typedef struct {
+	UINT16      name[MAX_NAME_LENGTH];
+	UINT16      name_hash;
+	UINT8       name_len;
+} UNI_NAME_T;
 
-	/*----------------------------------------------------------------------*/
-	/*  External Function Declarations                                      */
-	/*----------------------------------------------------------------------*/
+/*----------------------------------------------------------------------*/
+/*  External Function Declarations                                      */
+/*----------------------------------------------------------------------*/
 
-	/* NLS management function */
-	UINT16 nls_upper(struct super_block *sb, UINT16 a);
-	INT32  nls_dosname_cmp(struct super_block *sb, UINT8 *a, UINT8 *b);
-	INT32  nls_uniname_cmp(struct super_block *sb, UINT16 *a, UINT16 *b);
-	void   nls_uniname_to_dosname(struct super_block *sb, DOS_NAME_T *p_dosname, UNI_NAME_T *p_uniname, INT32 *p_lossy);
-	void   nls_dosname_to_uniname(struct super_block *sb, UNI_NAME_T *p_uniname, DOS_NAME_T *p_dosname);
-	void   nls_uniname_to_cstring(struct super_block *sb, UINT8 *p_cstring, UNI_NAME_T *p_uniname);
-	void   nls_cstring_to_uniname(struct super_block *sb, UNI_NAME_T *p_uniname, UINT8 *p_cstring, INT32 *p_lossy);
+/* NLS management function */
+UINT16 nls_upper(struct super_block *sb, UINT16 a);
+INT32  nls_dosname_cmp(struct super_block *sb, UINT8 *a, UINT8 *b);
+INT32  nls_uniname_cmp(struct super_block *sb, UINT16 *a, UINT16 *b);
+void   nls_uniname_to_dosname(struct super_block *sb, DOS_NAME_T *p_dosname, UNI_NAME_T *p_uniname, INT32 *p_lossy);
+void   nls_dosname_to_uniname(struct super_block *sb, UNI_NAME_T *p_uniname, DOS_NAME_T *p_dosname);
+void   nls_uniname_to_cstring(struct super_block *sb, UINT8 *p_cstring, UNI_NAME_T *p_uniname);
+void   nls_cstring_to_uniname(struct super_block *sb, UNI_NAME_T *p_uniname, UINT8 *p_cstring, INT32 *p_lossy);
 
 #ifdef __cplusplus
 }
diff --git a/fs/exfat/exfat_super.c b/fs/exfat/exfat_super.c
index 656e195..32de8e4 100644
--- a/fs/exfat/exfat_super.c
+++ b/fs/exfat/exfat_super.c
@@ -1400,21 +1400,21 @@ static ssize_t exfat_direct_IO(int rw, struct kiocb *iocb,
 		exfat_write_failed(mapping, offset+iov_length(iov, nr_segs));
 #endif
 	return ret;
-
 }
 
 static sector_t _exfat_bmap(struct address_space *mapping, sector_t block)
 {
 	sector_t blocknr;
 
+	/* exfat_get_cluster() assumes the requested blocknr isn't truncated. */
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3,4,00)
 	down_read(&EXFAT_I(mapping->host)->truncate_lock);
 	blocknr = generic_block_bmap(mapping, block, exfat_get_block);
 	up_read(&EXFAT_I(mapping->host)->truncate_lock);
 #else
-	down_read(&mapping->host->i_alloc_sem);
+	down_read(&EXFAT_I(mapping->host)->i_alloc_sem);
 	blocknr = generic_block_bmap(mapping, block, exfat_get_block);
-	up_read(&mapping->host->i_alloc_sem);
+	up_read(&EXFAT_I(mapping->host)->i_alloc_sem);
 #endif
 
 	return blocknr;
@@ -1521,7 +1521,7 @@ static int exfat_fill_inode(struct inode *inode, FILE_ID_T *fid)
 #else
 		inode->i_nlink = info.NumSubdirs;
 #endif
-	} else if (info.Attr & ATTR_SYMLINK) {
+	} else if (info.Attr & ATTR_SYMLINK) { /* symbolic link */
 		inode->i_generation |= 1;
 		inode->i_mode = exfat_make_mode(sbi, info.Attr, S_IRWXUGO);
 		inode->i_op = &exfat_symlink_inode_operations;
diff --git a/fs/exfat/exfat_super.h b/fs/exfat/exfat_super.h
index ed9cb40..c9201dd 100644
--- a/fs/exfat/exfat_super.h
+++ b/fs/exfat/exfat_super.h
@@ -109,6 +109,7 @@ struct exfat_inode_info {
 	struct rw_semaphore truncate_lock;
 #endif
 	struct inode vfs_inode;
+	struct rw_semaphore i_alloc_sem; /* protect bmap against truncate */
 };
 
 #define EXFAT_SB(sb)		((struct exfat_sb_info *)((sb)->s_fs_info))
diff --git a/fs/exfat/exfat_version.h b/fs/exfat/exfat_version.h
index f8e4b7c..4428967 100644
--- a/fs/exfat/exfat_version.h
+++ b/fs/exfat/exfat_version.h
@@ -16,4 +16,4 @@
 /*                                                                      */
 /************************************************************************/
 
-#define EXFAT_VERSION	"1.2.4"
+#define EXFAT_VERSION  "1.2.5"
-- 
1.9.1

