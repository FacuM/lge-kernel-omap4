From 5c32ef8ac782ccb123441b27608692e98dfa3b04 Mon Sep 17 00:00:00 2001
From: Boy Petersen <boypetersen@gmail.com>
Date: Mon, 1 Jul 2013 12:15:10 +0200
Subject: [PATCH 088/100] cgroup/timer_slack: fix cgroup permission errors

Since the common mounting of cpu and timer_slack into /dev/cpuctl
in commit
https://github.com/boype/kernel_tuna_jb42/commit/f23ab456002c2d3b416260862dbfdb82b031a450
the Android OS cannot move processes across cgoups anymore:

    W/SchedPolicy( 1180): add_tid_to_cgroup failed to write '5949'
    (Permission denied); policy=0

Fix this by implementing an 'allow_attach' handler, according to
this commit:
https://github.com/boype/kernel_tuna_jb42/commit/bb5b603036b99d80527b222dc98eba4ee8341020

Signed-off-by: Boy Petersen <boypetersen@gmail.com>
Signed-off-by: artas182x <artas182x@gmail.com>
---
 kernel/cgroup_timer_slack.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/kernel/cgroup_timer_slack.c b/kernel/cgroup_timer_slack.c
index 808f250..3226deb 100644
--- a/kernel/cgroup_timer_slack.c
+++ b/kernel/cgroup_timer_slack.c
@@ -58,6 +58,19 @@ static void tslack_destroy(struct cgroup_subsys *tslack_cgroup,
 	kfree(cgroup_to_tslack(cgroup));
 }
 
+static int tslack_allow_attach(struct cgroup *cgrp, struct task_struct *tsk)
+{
+	const struct cred *cred = current_cred(), *tcred;
+
+	tcred = __task_cred(tsk);
+
+	if ((current != tsk) && !capable(CAP_SYS_NICE) &&
+			cred->euid != tcred->uid && cred->euid != tcred->suid)
+		return -EACCES;
+
+	return 0;
+}
+
 static u64 tslack_read_min(struct cgroup *cgroup, struct cftype *cft)
 {
 	return cgroup_to_tslack(cgroup)->min_slack_ns;
@@ -108,6 +121,7 @@ struct cgroup_subsys timer_slack_subsys = {
 	.subsys_id	= timer_slack_subsys_id,
 	.create		= tslack_create,
 	.destroy	= tslack_destroy,
+	.allow_attach	= tslack_allow_attach,
 	.populate	= tslack_populate,
 };
 
-- 
1.9.1

