diff a/arch/arm/mach-omap2/omap2plus-cpufreq.c b/arch/arm/mach-omap2/omap2plus-cpufreq.c	(rejected hunks)
@@ -297,6 +310,101 @@ static inline void freq_table_free(void)
 		opp_free_cpufreq_table(mpu_dev, &freq_table);
 }
 
+static void omap_cpu_early_suspend(struct early_suspend *h)
+{
+	unsigned int cur;
+
+	mutex_lock(&omap_cpufreq_lock);
+
+#ifdef ENABLE_SLEEP_MAX_FREQUENCY
+	if (screen_off_max_freq) {
+		max_freq_cap = screen_off_max_freq;
+
+		cur = omap_getspeed(0);
+		if (cur > max_freq_cap)
+			omap_cpufreq_scale(max_freq_cap, cur);
+	}
+#endif
+
+	mutex_unlock(&omap_cpufreq_lock);
+}
+
+static void omap_cpu_late_resume(struct early_suspend *h)
+{
+	unsigned int cur;
+
+	mutex_lock(&omap_cpufreq_lock);
+	
+#ifdef ENABLE_SLEEP_MAX_FREQUENCY
+	if (max_freq_cap) {
+		max_freq_cap = 0;
+
+		cur = omap_getspeed(0);
+		if (cur != current_target_freq)
+			omap_cpufreq_scale(current_target_freq, cur);
+	}
+#endif
+
+	mutex_unlock(&omap_cpufreq_lock);
+}
+
+static struct early_suspend omap_cpu_early_suspend_handler = {
+	.level = EARLY_SUSPEND_LEVEL_BLANK_SCREEN,
+	.suspend = omap_cpu_early_suspend,
+	.resume = omap_cpu_late_resume,
+};
+
+#ifdef ENABLE_SLEEP_MAX_FREQUENCY
+
+static ssize_t show_screen_off_freq(struct cpufreq_policy *policy, char *buf)
+{
+	return sprintf(buf, "%u\n", screen_off_max_freq);
+}
+
+static ssize_t store_screen_off_freq(struct cpufreq_policy *policy, const char *buf, size_t count)
+{
+	unsigned int freq = 0;
+	int ret;
+	int index;
+
+	if (!freq_table) return -EINVAL;
+
+	ret = sscanf(buf, "%u", &freq);
+	if (ret != 1) { 
+		screen_off_max_freq = 0;
+		return -EINVAL;
+	}
+
+	if ( ! freq ) {
+		screen_off_max_freq = 0;
+		pr_info("screen_off_max_freq limit removed\n");
+		return count;
+	}
+
+	mutex_lock(&omap_cpufreq_lock);
+
+	ret = cpufreq_frequency_table_target(policy, freq_table, freq, CPUFREQ_RELATION_H, &index);
+	if (ret) goto out;
+
+	screen_off_max_freq = freq_table[index].frequency;
+
+	pr_info("screen_off_max_freq set to: %u\n", screen_off_max_freq);
+
+	ret = count;
+
+out:
+	mutex_unlock(&omap_cpufreq_lock);
+	return ret;
+}
+
+struct freq_attr omap_cpufreq_attr_screen_off_freq = {
+	.attr = { .name = "screen_off_max_freq", .mode = 0644, },
+	.show = show_screen_off_freq,
+	.store = store_screen_off_freq,
+};
+
+#endif //ENABLE_SLEEP_MAX_FREQUENCY
+
 #if defined(CONFIG_THERMAL_FRAMEWORK) || defined(CONFIG_OMAP4_DUTY_CYCLE)
 void omap_thermal_step_freq_down(void)
 {
