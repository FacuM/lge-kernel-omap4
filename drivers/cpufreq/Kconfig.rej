diff a/drivers/cpufreq/Kconfig b/drivers/cpufreq/Kconfig	(rejected hunks)
@@ -141,6 +141,16 @@ config CPU_FREQ_DEFAULT_GOV_HYPER
 	help
 	  Use the CPUFreq governor 'hyper' as default.
 
+config CPU_FREQ_DEFAULT_GOV_DYNAMIC_INTERACTIVE
+	bool "dynamic interactive"
+	select CPU_FREQ_GOV_DYNAMIC_INTERACTIVE
+	help
+	  Use the CPUFreq governor 'dynamic interactive' as default. This allows
+	  you to get a full dynamic cpu frequency capable system by simply
+	  loading your cpufreq low-level hardware driver, using the
+	  'interactive' governor for latency-sensitive workloads. This governor
+	  changes its tunables by itself depending on the load of the system.
+
 endchoice
 
 config CPU_FREQ_GOV_PERFORMANCE
@@ -263,6 +273,22 @@ config CPU_FREQ_GOV_HYPER
 	  'hyper' - a tweaked "ondemand" based smart and smooth optimized governor!
 
 	  If in doubt, say Y.
+config CPU_FREQ_GOV_DYNAMIC_INTERACTIVE
+	tristate "'dynamic interactive' cpufreq policy governor"
+	help
+	  'dynamic interactive' - This driver adds a dynamic cpufreq policy governor
+	  designed for latency-sensitive workloads.
+
+	  This governor attempts to reduce the latency of clock
+	  increases so that the system is more responsive to
+	  interactive workloads.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called cpufreq_interactive.
+
+	  For details, take a look at linux/Documentation/cpu-freq.
+
+	  If in doubt, say N.
 
 menu "x86 CPU frequency scaling drivers"
 depends on X86
